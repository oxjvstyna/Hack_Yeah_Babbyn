-- V1__init.sql

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ========== USERS (auto-increment BIGINT) ==========
CREATE TABLE users (
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
);

-- ========== COUNTRIES (UUID, bez relacji) ==========
CREATE TABLE countries (
                           id   UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                           iso3 VARCHAR(3)  NOT NULL UNIQUE,
                           name TEXT        NOT NULL,
                           security_rating FLOAT NOT NULL,
                           fun_rating      FLOAT NOT NULL
);

-- ========== PLACES (UUID, FK -> COUNTRY) ==========
CREATE TABLE places (
                        id          UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                        country_id  UUID NOT NULL REFERENCES countries(id) ON DELETE RESTRICT,
                        name        TEXT NOT NULL,
                        width       NUMERIC(10,2),
                        length      NUMERIC(10,2),
                        description TEXT,
                        rating      INT  NOT NULL DEFAULT 0 CHECK (rating BETWEEN 0 AND 5),
                        date        DATE NOT NULL                 -- jeśli w encji masz LocalDateTime, zmień tu na TIMESTAMP(6)
);
CREATE INDEX idx_places_country ON places(country_id);

-- ========== PLACE_PHOTOS ==========
CREATE TABLE place_photos (
                              id       UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                              place_id UUID NOT NULL REFERENCES places(id) ON DELETE CASCADE,
                              url      TEXT NOT NULL,
                              position INT  NOT NULL DEFAULT 0
);
CREATE INDEX idx_place_photos_place ON place_photos(place_id);

-- ========== USER <-> COUNTRIES (lista ID w User) ==========
CREATE TABLE user_countries (
                                user_id    BIGINT NOT NULL REFERENCES users(id)     ON DELETE CASCADE,
                                country_id UUID   NOT NULL REFERENCES countries(id) ON DELETE RESTRICT,
                                PRIMARY KEY (user_id, country_id)
);
CREATE INDEX idx_user_countries_country ON user_countries(country_id);

-- ========== USER <-> PLACES (lista ID w User) ==========
CREATE TABLE user_places (
                             user_id  BIGINT NOT NULL REFERENCES users(id)  ON DELETE CASCADE,
                             place_id UUID   NOT NULL REFERENCES places(id) ON DELETE CASCADE,
                             PRIMARY KEY (user_id, place_id)
);
CREATE INDEX idx_user_places_place ON user_places(place_id);

-- ========== USER <-> USER (friends, many-to-many) ==========
CREATE TABLE user_friends (
                              user_id        BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
                              friend_user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
                              PRIMARY KEY (user_id, friend_user_id),
                              CHECK (user_id <> friend_user_id)
);

-- ========== PLACE <-> USER (travel buddies jako same ID) ==========
CREATE TABLE place_travel_buddies (
                                      place_id UUID   NOT NULL REFERENCES places(id) ON DELETE CASCADE,
                                      user_id  BIGINT NOT NULL REFERENCES users(id)  ON DELETE CASCADE,
                                      PRIMARY KEY (place_id, user_id)
);
CREATE INDEX idx_ptb_user ON place_travel_buddies(user_id);
