-- V1__init.sql

-- ========== USERS ==========
CREATE TABLE users (
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name TEXT
);

-- ========== COUNTRIES ==========
CREATE TABLE countries (
                           id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           iso3 VARCHAR(3) UNIQUE,
                           name TEXT
);

-- ========== PLACES ==========
CREATE TABLE places (
                        id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        country_id  BIGINT REFERENCES countries(id) ON DELETE RESTRICT,
                        name        TEXT,
                        width       NUMERIC(10,2),
                        length      NUMERIC(10,2),
                        description TEXT,
                        rating      INT DEFAULT 0 CHECK (rating BETWEEN 0 AND 5),
                        date        DATE
);
CREATE INDEX idx_places_country ON places(country_id);

-- ========== PLACE_PHOTOS ==========
CREATE TABLE place_photos (
                              id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              place_id  BIGINT REFERENCES places(id) ON DELETE CASCADE,
                              url       TEXT,
                              position  INT DEFAULT 0
);
CREATE INDEX idx_place_photos_place ON place_photos(place_id);

-- ========== COUNTRY_RATINGS ==========
-- Trzyma oceny per (user, country) jako dwie kolumny: fun_rating i security_rating.
CREATE TABLE country_ratings (
                                 id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 user_id        BIGINT REFERENCES users(id)     ON DELETE CASCADE,
                                 country_id     BIGINT REFERENCES countries(id) ON DELETE CASCADE,
                                 fun_rating     REAL,
                                 security_rating REAL,
                                 CONSTRAINT uq_country_ratings UNIQUE (user_id, country_id),
                                 CONSTRAINT ck_country_ratings_fun      CHECK (fun_rating     IS NULL OR (fun_rating     >= 0 AND fun_rating     <= 5)),
                                 CONSTRAINT ck_country_ratings_security CHECK (security_rating IS NULL OR (security_rating >= 0 AND security_rating <= 5))
);
CREATE INDEX idx_country_ratings_country ON country_ratings(country_id);
CREATE INDEX idx_country_ratings_user    ON country_ratings(user_id);

-- ========== USER <-> PLACES ==========
CREATE TABLE user_places (
                             user_id  BIGINT REFERENCES users(id)   ON DELETE CASCADE,
                             place_id BIGINT REFERENCES places(id)  ON DELETE CASCADE,
                             PRIMARY KEY (user_id, place_id),
                             CONSTRAINT uk_user_places UNIQUE (user_id, place_id)
);
CREATE INDEX idx_user_places_place ON user_places(place_id);

-- ========== USER <-> USER (friends, many-to-many) ==========
CREATE TABLE user_friends (
                              user_id        BIGINT REFERENCES users(id) ON DELETE CASCADE,
                              friend_user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
                              PRIMARY KEY (user_id, friend_user_id),
                              CHECK (user_id <> friend_user_id)
);

-- ========== PLACE <-> USER (travel buddies) ==========
CREATE TABLE place_travel_buddies (
                                      place_id BIGINT REFERENCES places(id) ON DELETE CASCADE,
                                      user_id  BIGINT REFERENCES users(id)  ON DELETE CASCADE,
                                      PRIMARY KEY (place_id, user_id)
);
CREATE INDEX idx_ptb_user ON place_travel_buddies(user_id);
